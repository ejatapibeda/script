--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.4) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==6) then v29=nil;function v29() local v31=0 + 0 ;local v32;local v33;local v34;local v35;local v36;local v37;local v38;while true do if (v31==(937 -(39 + 896))) then local v72=0 -0 ;while true do if (v72~=0) then else v36=nil;v37=nil;v72=1;end if (v72~=(739 -(542 + 196))) then else v31=4 -1 ;break;end end end if (v31~=(0 + 0)) then else v32=0 -0 ;v33=nil;v31=1 + 0 ;end if (v31~=3) then else v38=nil;while true do local v77=0 + 0 ;local v78;while true do if (v77~=(0 + 0)) then else v78=0;while true do if (v78~=(396 -(115 + 281))) then else local v103=0 -0 ;while true do if (v103~=0) then else if (v32~=(4 -2)) then else local v107=0 + 0 ;local v108;while true do if (v107~=(1551 -(1126 + 425))) then else v108=405 -(118 + 287) ;while true do if (v108~=(2 -1)) then else for v126=1,v24() do local v127=0;local v128;local v129;local v130;while true do if (v127~=(3 -2)) then else v130=nil;while true do if (v128~=1) then else while true do if ((1121 -(118 + 1003))==v129) then v130=v22();if (v21(v130,1,1)==(0 -0)) then local v485=0;local v486;local v487;local v488;local v489;local v490;while true do if (v485~=1) then else v488=nil;v489=nil;v485=379 -(142 + 235) ;end if (v485==(869 -(550 + 317))) then v490=nil;while true do if (v486==2) then while true do if (v487~=(1 + 0)) then else local v493=0 -0 ;local v494;local v495;while true do if ((0 -0)==v493) then v494=0 -0 ;v495=nil;v493=1;end if (v493~=(286 -(134 + 151))) then else while true do if (v494==0) then v495=0;while true do if (v495==(1666 -(970 + 695))) then v487=2;break;end if ((0 -0)==v495) then local v506=0 + 0 ;local v507;while true do if (v506~=(1990 -(582 + 1408))) then else v507=0 + 0 ;while true do if (v507~=(0 + 0)) then else v490={v23(),v23(),nil,nil};if (v488==0) then local v509=1824 -(1195 + 629) ;local v510;local v511;local v512;while true do if (v509==(0 -0)) then v510=0 + 0 ;v511=nil;v509=4 -3 ;end if (v509==1) then v512=nil;while true do if (v510~=(0 -0)) then else local v519=0 + 0 ;while true do if (v519~=(1329 -(797 + 532))) then else v511=0 + 0 ;v512=nil;v519=242 -(187 + 54) ;end if ((781 -(162 + 618))~=v519) then else v510=1 + 0 ;break;end end end if (v510~=(1 + 0)) then else while true do if (v511~=(0 -0)) then else v512=731 -(476 + 255) ;while true do if (v512==(0 -0)) then v490[2 + 1 ]=v23();v490[6 -2 ]=v23();break;end end break;end end break;end end break;end end elseif (v488==(1 + 0)) then v490[5 -2 ]=v24();elseif (v488==(240 -(64 + 174))) then v490[1639 -(1373 + 263) ]=v24() -((2 -0)^(352 -(144 + 192))) ;elseif (v488~=3) then else local v520=0;local v521;local v522;while true do if (v520==1) then while true do if (v521==(1000 -(451 + 549))) then v522=0 + 0 ;while true do if (v522==(0 + 0)) then v490[4 -1 ]=v24() -((2 + 0)^16) ;v490[4]=v23();break;end end break;end end break;end if (v520==(0 -0)) then v521=0;v522=nil;v520=1385 -(746 + 638) ;end end end v507=1 + 0 ;end if (v507==(1 + 0)) then v495=1 -0 ;break;end end break;end end end end break;end end break;end end end if (v487~=(344 -(218 + 123))) then else if (v21(v489,1584 -(1535 + 46) ,3 + 0 )==(1 + 0)) then v490[11 -7 ]=v38[v490[4]];end v33[v126]=v490;break;end if (0~=v487) then else local v497=560 -(306 + 254) ;local v498;while true do if (v497==(0 + 0)) then v498=0 + 0 ;while true do if (v498~=(1 -0)) then else v487=1;break;end if (v498==0) then local v503=0;while true do if (v503==(1468 -(899 + 568))) then v498=1;break;end if ((0 + 0)==v503) then v488=v21(v130,4 -2 ,606 -(268 + 335) );v489=v21(v130,294 -(60 + 230) ,15 -9 );v503=573 -(426 + 146) ;end end end end break;end end end if (v487~=(1935 -(565 + 1368))) then else local v499=0 -0 ;local v500;while true do if (v499==(0 + 0)) then v500=0;while true do if (v500==(1457 -(282 + 1174))) then v487=814 -(569 + 242) ;break;end if (v500==(0 -0)) then local v504=0;local v505;while true do if (0==v504) then v505=0 + 0 ;while true do if ((0 + 0)~=v505) then else local v508=0 -0 ;while true do if (v508~=0) then else if (v21(v489,1,1025 -(706 + 318) )~=(2 -1)) then else v490[1253 -(721 + 530) ]=v38[v490[2]];end if (v21(v489,1273 -(945 + 326) ,4 -2 )~=(1 + 0)) then else v490[3 + 0 ]=v38[v490[703 -(271 + 429) ]];end v508=1 + 0 ;end if (v508==(1 + 0)) then v505=1501 -(1408 + 92) ;break;end end end if (v505~=(1087 -(461 + 625))) then else v500=1289 -(993 + 295) ;break;end end break;end end end end break;end end end end break;end if ((1 + 0)~=v486) then else local v491=0;while true do if ((0 + 0)==v491) then v489=nil;v490=nil;v491=1172 -(418 + 753) ;end if (v491==(1 + 0)) then v486=2 + 0 ;break;end end end if (0==v486) then local v492=0;while true do if (0~=v492) then else v487=0 + 0 ;v488=nil;v492=268 -(176 + 91) ;end if (v492==1) then v486=1 + 0 ;break;end end end end break;end if (v485==(0 + 0)) then v486=529 -(406 + 123) ;v487=nil;v485=1770 -(1749 + 20) ;end end end break;end end break;end if (v128==(0 -0)) then local v467=0 + 0 ;while true do if (v467~=(1092 -(975 + 117))) then else v129=1322 -(1249 + 73) ;v130=nil;v467=1 + 0 ;end if (v467==1) then v128=1146 -(466 + 679) ;break;end end end end break;end if (v127~=(0 -0)) then else v128=0 -0 ;v129=nil;v127=1901 -(106 + 1794) ;end end end v32=1 + 2 ;break;end if (v108==0) then local v122=1018 -(697 + 321) ;while true do if (v122==(0 -0)) then for v386=1 + 0 ,v37 do local v387=0 -0 ;local v388;local v389;local v390;while true do if (v387~=(2 -1)) then else v390=nil;while true do if (1~=v388) then else if (v389==(2 -1)) then v390=v22()~=(0 -0) ;elseif (v389==2) then v390=v25();elseif (v389~=(5 -2)) then else v390=v26();end v38[v386]=v390;break;end if (v388~=(0 -0)) then else local v481=0;while true do if (v481~=(114 -(4 + 110))) then else v389=v22();v390=nil;v481=585 -(57 + 527) ;end if (v481~=(1428 -(41 + 1386))) then else v388=104 -(17 + 86) ;break;end end end end break;end if (v387~=(872 -(826 + 46))) then else local v468=0;while true do if (v468~=(0 + 0)) then else v388=0;v389=nil;v468=1 -0 ;end if (v468~=(1 + 0)) then else v387=2 -1 ;break;end end end end end v36[3]=v22();v122=167 -(122 + 44) ;end if (v122~=(3 -2)) then else v108=1;break;end end end end break;end end end if (v32~=(3 + 0)) then else local v109=0 -0 ;local v110;while true do if (v109~=(0 -0)) then else v110=0;while true do if (v110==(0 -0)) then for v131=1 + 0 ,v24() do v34[v131-(1 + 0) ]=v29();end return v36;end end break;end end end v103=1 -0 ;end if (v103~=1) then else v78=1;break;end end end if (v78==(66 -(30 + 35))) then if (v32==(1 + 0)) then local v104=1257 -(1043 + 214) ;while true do if (v104==(3 -2)) then v38={};v32=216 -(22 + 192) ;break;end if (v104~=(1212 -(323 + 889))) then else local v111=0;local v112;while true do if (v111==(1463 -(1404 + 59))) then v112=0 -0 ;while true do if (v112~=(0 -0)) then else v36={v33,v34,nil,v35};v37=v24();v112=1;end if (v112==1) then v104=414 -(15 + 398) ;break;end end break;end end end end end if ((0 -0)~=v32) then else local v105=0 -0 ;local v106;while true do if (0~=v105) then else v106=982 -(18 + 964) ;while true do if (v106==(0 -0)) then local v113=0 + 0 ;while true do if ((237 -(141 + 95))==v113) then v106=1 + 0 ;break;end if (v113~=(0 + 0)) then else v33={};v34={};v113=851 -(20 + 830) ;end end end if (v106==1) then v35={};v32=1;break;end end break;end end end break;end end break;end end end break;end if (v31~=1) then else local v73=0 + 0 ;while true do if (v73~=(2 -1)) then else v31=2;break;end if (v73~=0) then else v34=nil;v35=nil;v73=127 -(116 + 10) ;end end end end end v30=nil;v18=7;end if (v18==2) then function v22() local v39=0 + 0 ;local v40;while true do if (v39==1) then return v40;end if (v39==0) then v40=v1(v16,v19,v19);v19=v19 + (2 -1) ;v39=1 + 0 ;end end end v23=nil;function v23() local v41,v42=v1(v16,v19,v19 + 2 + 0 );v19=v19 + (2 -0) ;return (v42 * (152 + 104)) + v41 ;end v18=3;end if (v18==3) then v24=nil;function v24() local v43,v44,v45,v46=v1(v16,v19,v19 + (4 -(850 -(254 + 595))) );v19=v19 + ((895 -(55 + 71)) -(574 + (251 -60))) ;return (v46 * (16777379 -(92 + (1861 -(573 + 1217))))) + (v45 * (164187 -98651)) + (v44 * (127 + 129)) + v43 ;end v25=nil;v18=4;end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v47) if (v1(v47,2)==79) then v20=v0(v3(v47,1,1));return "";else local v69=v2(v0(v47,16));if v20 then local v79=v5(v69,v20);v20=nil;return v79;else return v69;end end end);v18=1;end if (v18==7) then function v30(v48,v49,v50) local v51=0;local v52;local v53;local v54;while true do if (1==v51) then v54=v48[3];return function(...) local v80=v52;local v81=v53;local v82=v54;local v83=v28;local v84=1;local v85= -1;local v86={};local v87={...};local v88=v12("#",...) -1 ;local v89={};local v90={};for v95=0,v88 do if (v95>=v82) then v86[v95-v82 ]=v87[v95 + 1 ];else v90[v95]=v87[v95 + 1 ];end end local v91=(v88-v82) + 1 ;local v92;local v93;while true do local v96=0;while true do if (v96==0) then v92=v80[v84];v93=v92[1];v96=1;end if (1==v96) then if (v93<=61) then if (v93<=30) then if (v93<=14) then if (v93<=6) then if (v93<=2) then if (v93<=0) then v49[v92[3]]=v90[v92[2]];elseif (v93>1) then v90[v92[2]]();else local v133=v92[2];local v134,v135=v83(v90[v133](v90[v133 + 1 ]));v85=(v135 + v133) -1 ;local v136=0;for v309=v133,v85 do v136=v136 + 1 ;v90[v309]=v134[v136];end end elseif (v93<=4) then if (v93>3) then if (v90[v92[2]]<v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v90[v92[2]]==v92[4]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93==5) then v90[v92[2]]=v90[v92[3]] + v90[v92[4]] ;else local v138=0;local v139;while true do if (v138==0) then v139=v92[2];v90[v139](v90[v139 + 1 ]);break;end end end elseif (v93<=10) then if (v93<=8) then if (v93>7) then v90[v92[2]][v92[3]]=v92[4];else v90[v92[2]][v90[v92[3]]]=v90[v92[4]];end elseif (v93==9) then v84=v92[3];elseif (v92[2]<v90[v92[4]]) then v84=v92[3];else v84=v84 + 1 ;end elseif (v93<=12) then if (v93>11) then v90[v92[2]]=v90[v92[3]][v90[v92[4]]];else local v147=0;local v148;while true do if (v147==0) then v148=v90[v92[4]];if  not v148 then v84=v84 + 1 ;else local v456=0;while true do if (v456==0) then v90[v92[2]]=v148;v84=v92[3];break;end end end break;end end end elseif (v93==13) then local v149=v92[2];do return v90[v149](v13(v90,v149 + 1 ,v92[3]));end else local v150=0;local v151;local v152;local v153;while true do if (v150==0) then v151=v92[2];v152=v90[v151];v150=1;end if (v150==1) then v153=v92[3];for v427=1,v153 do v152[v427]=v90[v151 + v427 ];end break;end end end elseif (v93<=22) then if (v93<=18) then if (v93<=16) then if (v93>15) then if (v90[v92[2]]<v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end else v90[v92[2]]= #v90[v92[3]];end elseif (v93==17) then local v155=v92[2];local v156={v90[v155](v90[v155 + 1 ])};local v157=0;for v312=v155,v92[4] do local v313=0;while true do if (v313==0) then v157=v157 + 1 ;v90[v312]=v156[v157];break;end end end else for v314=v92[2],v92[3] do v90[v314]=nil;end end elseif (v93<=20) then if (v93==19) then v90[v92[2]][v92[3]]=v92[4];else local v160=v92[2];v90[v160]=v90[v160](v13(v90,v160 + 1 ,v92[3]));end elseif (v93>21) then if (v90[v92[2]]<v90[v92[4]]) then v84=v92[3];else v84=v84 + 1 ;end elseif (v90[v92[2]]<=v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=26) then if (v93<=24) then if (v93==23) then v90[v92[2]]=v49[v92[3]];else local v164=0;local v165;while true do if (v164==0) then v165=v92[2];v90[v165](v13(v90,v165 + 1 ,v92[3]));break;end end end elseif (v93==25) then if (v92[2]<v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end else v90[v92[2]]=v90[v92[3]][v92[4]];end elseif (v93<=28) then if (v93>27) then v90[v92[2]]=v90[v92[3]] * v90[v92[4]] ;else local v169=v92[2];v90[v169]=v90[v169]();end elseif (v93==29) then v90[v92[2]]=v90[v92[3]] * v90[v92[4]] ;elseif (v90[v92[2]]~=v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=45) then if (v93<=37) then if (v93<=33) then if (v93<=31) then local v116=v92[2];local v117={};for v123=1, #v89 do local v124=0;local v125;while true do if (v124==0) then v125=v89[v123];for v397=0, #v125 do local v398=v125[v397];local v399=v398[1];local v400=v398[2];if ((v399==v90) and (v400>=v116)) then v117[v400]=v399[v400];v398[1]=v117;end end break;end end end elseif (v93==32) then local v172=v92[2];local v173={v90[v172](v13(v90,v172 + 1 ,v85))};local v174=0;for v316=v172,v92[4] do v174=v174 + 1 ;v90[v316]=v173[v174];end elseif (v92[2]<v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=35) then if (v93==34) then local v175=v92[2];v90[v175](v13(v90,v175 + 1 ,v85));else v90[v92[2]]=v90[v92[3]];end elseif (v93==36) then do return;end else local v178=v92[2];v90[v178]=v90[v178](v13(v90,v178 + 1 ,v85));end elseif (v93<=41) then if (v93<=39) then if (v93>38) then v90[v92[2]][v92[3]]=v90[v92[4]];else v90[v92[2]]();end elseif (v93==40) then v90[v92[2]]=v90[v92[3]]/v92[4] ;else v90[v92[2]]=v92[3]^v90[v92[4]] ;end elseif (v93<=43) then if (v93==42) then local v184=v81[v92[3]];local v185;local v186={};v185=v10({},{__index=function(v319,v320) local v321=v186[v320];return v321[1][v321[2]];end,__newindex=function(v322,v323,v324) local v325=0;local v326;while true do if (v325==0) then v326=v186[v323];v326[1][v326[2]]=v324;break;end end end});for v327=1,v92[4] do local v328=0;local v329;while true do if (v328==0) then v84=v84 + 1 ;v329=v80[v84];v328=1;end if (v328==1) then if (v329[1]==35) then v186[v327-1 ]={v90,v329[3]};else v186[v327-1 ]={v49,v329[3]};end v89[ #v89 + 1 ]=v186;break;end end end v90[v92[2]]=v30(v184,v185,v50);else local v188=v92[2];do return v13(v90,v188,v85);end end elseif (v93>44) then local v189=0;while true do if (v189==0) then v90[v92[2]]=v92[3]~=0 ;v84=v84 + 1 ;break;end end else local v190=v92[3];local v191=v90[v190];for v330=v190 + 1 ,v92[4] do v191=v191   .. v90[v330] ;end v90[v92[2]]=v191;end elseif (v93<=53) then if (v93<=49) then if (v93<=47) then if (v93==46) then v50[v92[3]]=v90[v92[2]];else local v195=0;local v196;local v197;local v198;while true do if (0==v195) then v196=v92[2];v197={v90[v196](v90[v196 + 1 ])};v195=1;end if (v195==1) then v198=0;for v436=v196,v92[4] do local v437=0;while true do if (v437==0) then v198=v198 + 1 ;v90[v436]=v197[v198];break;end end end break;end end end elseif (v93>48) then local v199=v92[2];local v200=v90[v92[3]];v90[v199 + 1 ]=v200;v90[v199]=v200[v92[4]];else local v204=0;local v205;while true do if (v204==0) then v205=v92[2];v90[v205](v90[v205 + 1 ]);break;end end end elseif (v93<=51) then if (v93==50) then v50[v92[3]]=v90[v92[2]];else v90[v92[2]]=v50[v92[3]];end elseif (v93==52) then if (v92[2]<=v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif  not v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=57) then if (v93<=55) then if (v93>54) then do return;end else v90[v92[2]]=v90[v92[3]] + v92[4] ;end elseif (v93>56) then local v211=0;local v212;local v213;local v214;local v215;while true do if (v211==2) then for v438=v212,v85 do v215=v215 + 1 ;v90[v438]=v213[v215];end break;end if (v211==0) then v212=v92[2];v213,v214=v83(v90[v212](v13(v90,v212 + 1 ,v92[3])));v211=1;end if (v211==1) then v85=(v214 + v212) -1 ;v215=0;v211=2;end end elseif (v90[v92[2]]~=v92[4]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=59) then if (v93==58) then local v216=v92[2];local v217=v90[v216];local v218=v92[3];for v331=1,v218 do v217[v331]=v90[v216 + v331 ];end elseif (v90[v92[2]]~=v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93==60) then v90[v92[2]]=v92[3]~=0 ;else v90[v92[2]]=v90[v92[3]] * v92[4] ;end elseif (v93<=92) then if (v93<=76) then if (v93<=68) then if (v93<=64) then if (v93<=62) then v90[v92[2]]=v90[v92[3]][v92[4]];elseif (v93>63) then if v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end else v90[v92[2]]={};end elseif (v93<=66) then if (v93==65) then v90[v92[2]]=v90[v92[3]] + v92[4] ;else v90[v92[2]]=v30(v81[v92[3]],nil,v50);end elseif (v93>67) then v90[v92[2]]=v90[v92[3]] -v90[v92[4]] ;else local v225=0;local v226;while true do if (v225==0) then v226=v92[2];v90[v226]=v90[v226](v90[v226 + 1 ]);break;end end end elseif (v93<=72) then if (v93<=70) then if (v93==69) then v90[v92[2]]=v92[3]~=0 ;else v90[v92[2]]=v49[v92[3]];end elseif (v93==71) then if (v90[v92[2]]<v90[v92[4]]) then v84=v92[3];else v84=v84 + 1 ;end elseif (v90[v92[2]]~=v92[4]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=74) then if (v93>73) then v84=v92[3];else v90[v92[2]][v90[v92[3]]]=v90[v92[4]];end elseif (v93==75) then local v233=0;local v234;local v235;while true do if (v233==0) then v234=v92[2];v235=v90[v234];v233=1;end if (v233==1) then for v441=v234 + 1 ,v92[3] do v7(v235,v90[v441]);end break;end end elseif (v92[2]==v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=84) then if (v93<=80) then if (v93<=78) then if (v93>77) then local v236=0;while true do if (v236==0) then v90[v92[2]]=v92[3]~=0 ;v84=v84 + 1 ;break;end end else do return v90[v92[2]]();end end elseif (v93==79) then if (v90[v92[2]]==v92[4]) then v84=v84 + 1 ;else v84=v92[3];end else local v237=v81[v92[3]];local v238;local v239={};v238=v10({},{__index=function(v334,v335) local v336=0;local v337;while true do if (0==v336) then v337=v239[v335];return v337[1][v337[2]];end end end,__newindex=function(v338,v339,v340) local v341=0;local v342;while true do if (v341==0) then v342=v239[v339];v342[1][v342[2]]=v340;break;end end end});for v343=1,v92[4] do v84=v84 + 1 ;local v344=v80[v84];if (v344[1]==35) then v239[v343-1 ]={v90,v344[3]};else v239[v343-1 ]={v49,v344[3]};end v89[ #v89 + 1 ]=v239;end v90[v92[2]]=v30(v237,v238,v50);end elseif (v93<=82) then if (v93>81) then v90[v92[2]]=v90[v92[3]]/v92[4] ;else local v242=v92[2];local v243=v92[4];local v244=v242 + 2 ;local v245={v90[v242](v90[v242 + 1 ],v90[v244])};for v346=1,v243 do v90[v244 + v346 ]=v245[v346];end local v246=v245[1];if v246 then v90[v244]=v246;v84=v92[3];else v84=v84 + 1 ;end end elseif (v93>83) then if (v92[2]==v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end else local v247=0;local v248;while true do if (0==v247) then v248=v90[v92[4]];if  not v248 then v84=v84 + 1 ;else v90[v92[2]]=v248;v84=v92[3];end break;end end end elseif (v93<=88) then if (v93<=86) then if (v93>85) then do return v90[v92[2]]();end else local v249=v92[2];local v250=v92[4];local v251=v249 + 2 ;local v252={v90[v249](v90[v249 + 1 ],v90[v251])};for v349=1,v250 do v90[v251 + v349 ]=v252[v349];end local v253=v252[1];if v253 then v90[v251]=v253;v84=v92[3];else v84=v84 + 1 ;end end elseif (v93==87) then if (v90[v92[2]]<=v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v92[2]<v90[v92[4]]) then v84=v92[3];else v84=v84 + 1 ;end elseif (v93<=90) then if (v93>89) then local v254=0;local v255;local v256;while true do if (v254==1) then for v445=1, #v89 do local v446=v89[v445];for v462=0, #v446 do local v463=0;local v464;local v465;local v466;while true do if (v463==0) then v464=v446[v462];v465=v464[1];v463=1;end if (v463==1) then v466=v464[2];if ((v465==v90) and (v466>=v255)) then v256[v466]=v465[v466];v464[1]=v256;end break;end end end end break;end if (v254==0) then v255=v92[2];v256={};v254=1;end end else local v257=0;local v258;while true do if (0==v257) then v258=v92[2];v90[v258]=v90[v258]();break;end end end elseif (v93==91) then if v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end else local v259=v92[2];do return v13(v90,v259,v259 + v92[3] );end end elseif (v93<=107) then if (v93<=99) then if (v93<=95) then if (v93<=93) then local v120=0;local v121;while true do if (v120==0) then v121=v92[2];v90[v121]=v90[v121](v13(v90,v121 + 1 ,v85));break;end end elseif (v93>94) then local v260=v92[2];v90[v260]=v90[v260](v90[v260 + 1 ]);elseif (v92[2]<=v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=97) then if (v93>96) then local v262=0;local v263;local v264;while true do if (0==v262) then v263=v92[3];v264=v90[v263];v262=1;end if (v262==1) then for v447=v263 + 1 ,v92[4] do v264=v264   .. v90[v447] ;end v90[v92[2]]=v264;break;end end else local v265=0;local v266;local v267;local v268;while true do if (v265==0) then v266=v92[2];v267={v90[v266](v13(v90,v266 + 1 ,v85))};v265=1;end if (v265==1) then v268=0;for v448=v266,v92[4] do local v449=0;while true do if (v449==0) then v268=v268 + 1 ;v90[v448]=v267[v268];break;end end end break;end end end elseif (v93==98) then v90[v92[2]]= #v90[v92[3]];else local v270=0;local v271;local v272;local v273;local v274;while true do if (v270==1) then v85=(v273 + v271) -1 ;v274=0;v270=2;end if (v270==0) then v271=v92[2];v272,v273=v83(v90[v271](v13(v90,v271 + 1 ,v92[3])));v270=1;end if (v270==2) then for v450=v271,v85 do v274=v274 + 1 ;v90[v450]=v272[v274];end break;end end end elseif (v93<=103) then if (v93<=101) then if (v93>100) then v90[v92[2]]=v90[v92[3]];else v90[v92[2]]=v90[v92[3]] -v90[v92[4]] ;end elseif (v93==102) then local v278=v92[2];do return v13(v90,v278,v85);end else v49[v92[3]]=v90[v92[2]];end elseif (v93<=105) then if (v93==104) then local v281=v92[2];do return v90[v281](v13(v90,v281 + 1 ,v92[3]));end else v90[v92[2]]=v90[v92[3]] + v90[v92[4]] ;end elseif (v93==106) then v90[v92[2]]=v92[3]^v90[v92[4]] ;else v90[v92[2]]=v92[3];end elseif (v93<=115) then if (v93<=111) then if (v93<=109) then if (v93==108) then v90[v92[2]]=v90[v92[3]][v90[v92[4]]];elseif  not v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end elseif (v93>110) then local v288=0;local v289;local v290;while true do if (v288==1) then v90[v289 + 1 ]=v290;v90[v289]=v290[v92[4]];break;end if (v288==0) then v289=v92[2];v290=v90[v92[3]];v288=1;end end else v90[v92[2]]=v50[v92[3]];end elseif (v93<=113) then if (v93>112) then local v293=v92[2];v90[v293]=v90[v293](v13(v90,v293 + 1 ,v92[3]));else v90[v92[2]]=v92[3];end elseif (v93>114) then local v297=0;local v298;local v299;local v300;local v301;while true do if (v297==1) then v85=(v300 + v298) -1 ;v301=0;v297=2;end if (v297==2) then for v453=v298,v85 do v301=v301 + 1 ;v90[v453]=v299[v301];end break;end if (v297==0) then v298=v92[2];v299,v300=v83(v90[v298](v90[v298 + 1 ]));v297=1;end end else for v354=v92[2],v92[3] do v90[v354]=nil;end end elseif (v93<=119) then if (v93<=117) then if (v93>116) then do return v90[v92[2]];end else local v302=v92[2];v90[v302](v13(v90,v302 + 1 ,v85));end elseif (v93==118) then v90[v92[2]][v92[3]]=v90[v92[4]];else v90[v92[2]]=v30(v81[v92[3]],nil,v50);end elseif (v93<=121) then if (v93>120) then v90[v92[2]]={};else local v307=v92[2];v90[v307](v13(v90,v307 + 1 ,v92[3]));end elseif (v93==122) then do return v90[v92[2]];end else v90[v92[2]]=v90[v92[3]] * v92[4] ;end v84=v84 + 1 ;break;end end end end;end if (v51==0) then v52=v48[1];v53=v48[2];v51=1;end end end return v30(v29(),{},v17)(...);end if (v18==1) then v21=nil;function v21(v55,v56,v57) if v57 then local v70=(v55/(((53 -(25 + 23)) -(1 + 2))^(v56-(1 + 0))))%(2^(((v57-(1 -0)) -(v56-1)) + 1)) ;return v70-(v70%(940 -(714 + 225))) ;else local v71=(5 -3)^(v56-(1 -(1886 -(927 + 959)))) ;return (((v55%(v71 + v71))>=v71) and ((807 -(118 + 688)) + 0)) or (0 -(732 -(16 + 716))) ;end end v22=nil;v18=2;end if (4==v18) then function v25() local v58=v24();local v59=v24();local v60=1 -0 ;local v61=(v21(v59,98 -(11 + 29 + 57) ,48 -28 ) * ((1 + 1)^(1776 -(1344 + (1691 -1291))))) + v58 ;local v62=v21(v59,426 -((1748 -(711 + 782)) + (287 -137)) ,25 + 6 );local v63=((v21(v59,317 -(175 + 110) )==(2 -1)) and  -(4 -3)) or (1797 -(503 + 1293)) ;if (v62==(1739 -(404 + 1335))) then if (v61==0) then return v63 * (0 -0) ;else local v94=0 + 0 ;while true do if (v94==(1061 -((1259 -(108 + 341)) + 251))) then v62=1;v60=0 + 0 ;break;end end end elseif (v62==(629 + (1887 -(270 + 199)))) then return ((v61==0) and (v63 * ((1 + 0)/(533 -(20 + 23 + 490))))) or (v63 * NaN) ;end return v8(v63,v62-((570 + 1186) -(711 + 22)) ) * (v60 + (v61/((2 + (1819 -(580 + 1239)))^(200 -148)))) ;end v26=nil;function v26(v64) local v65;if  not v64 then v64=v24();if (v64==(0 -0)) then return "";end end v65=v3(v16,v19,(v19 + v64) -(1 + 0) );v19=v19 + v64 ;local v66={};for v67=1 + 0 , #v65 do v66[v67]=v2(v1(v3(v65,v67,v67)));end return v6(v66);end v18=5;end if (v18==5) then v27=v24;v28=nil;function v28(...) return {...},v12("#",...);end v18=6;end end end return vv9(),...);
